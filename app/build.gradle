apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

if (project.hasProperty("FbsRelease2.signing")
        && new File(project.property("FbsRelease2.signing") + ".gradle").exists()) {
    apply from: project.property("FbsRelease2.signing") + ".gradle";
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "mx.x10.filipebezerra.horariosrmtcgoiania"
        minSdkVersion 10
        targetSdkVersion 23
        // API Version + Version Name -> 10 + 0.1.0 = 10010
        versionCode 10300
        versionName "3.0.0"
        manifestPlaceholders = [applicationLabel: "@string/app_name"]
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".dev"
            manifestPlaceholders = [applicationLabel: "Horarios Dev"]
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFile 'proguard-butterknife-7.pro'
            proguardFile 'proguard-google-play-services.pro'
            proguardFile 'proguard-gson.pro'
            proguardFile 'proguard-parse.pro'
            proguardFile 'proguard-retrolambda.pro'
            proguardFile 'proguard-rx-java.pro'
            proguardFile 'proguard-square-okhttp.pro'
            proguardFile 'proguard-square-otto.pro'
            proguardFile 'proguard-square-picasso.pro'
            proguardFile 'proguard-square-retrofit.pro'
            proguardFile 'proguard-support-design.pro'
            proguardFile 'proguard-support-v7-appcompat.pro'
            proguardFile 'proguard-support-v7-cardview.pro'
            proguardFile 'proguard-timber.pro'

            proguardFile 'proguard-rules.pro'
            proguardFile getDefaultProguardFile('proguard-android.txt')
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'

    compile 'com.google.android.gms:play-services-location:8.4.0'

    compile 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    compile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.squareup.okhttp:okhttp:2.7.0'
    compile 'com.squareup.okhttp:logging-interceptor:2.7.0'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:3.1.0'

    compile 'com.github.johnkil.android-robototextview:robototextview:2.4.3'
    compile 'de.hdodenhof:circleimageview:2.0.0'
    compile('com.github.afollestad.material-dialogs:core:0.8.5.3@aar') { transitive = true }

    compile 'com.hannesdorfmann.parcelableplease:annotation:1.0.1'
    apt 'com.hannesdorfmann.parcelableplease:processor:1.0.1'

    compile 'com.parse:parse-android:1.12.0'
}

retrolambda {
    jdk System.getenv("JAVA_HOME")
    oldJdk System.getenv("JAVA7_HOME")
    javaVersion JavaVersion.VERSION_1_7
}

android.applicationVariants.all{ variant ->
    variant.mergeAssets.doFirst {
        File fonts = file("${projectDir}/build/intermediates/exploded-aar/com.github.johnkil.android-robototextview/robototextview/2.4.3/assets/fonts")
        if (fonts.exists()) {
            for (File file : fonts.listFiles()) {
                if (!file.getName().contains("RobotoSlab-Light")&&!file.getName().contains("Roboto-Thin")) {
                    println("delete " + file.getName() + " font")
                    file.delete()
                };
            }
        }
    }
}